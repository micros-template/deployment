stages:
  - deploy
  - migrate
  - post-deploy

deploy:
  stage: deploy
  image: docker:24.0.5
  before_script:
    - apk add --no-cache bash git go yq
    - docker info
    - set -a
    - source .env
    - set +a
    - go env -w GOPRIVATE="10.1.20.130/*"
    - go env -w GOINSECURE="10.1.20.130/*"
    - git config --global url."http://$DROPPING_READ_TOKEN@10.1.20.130/".insteadOf "https://10.1.20.130/"
    # read from versioning and set to env
    - git clone http://$DROPPING_VERSIONING_TOKEN@10.1.20.130/dropping/versioning.git/
    - cp versioning/version.yaml .
    - export AUTH_SERVICE_IMAGE="10.1.20.130:5001/dropping/auth-service:$(yq '.auth_service_version' version.yaml)"
    - export USER_SERVICE_IMAGE="10.1.20.130:5001/dropping/user-service:$(yq '.user_service_version' version.yaml)"
    - export FILE_SERVICE_IMAGE="10.1.20.130:5001/dropping/file-service:$(yq '.file_service_version' version.yaml)"
    - export NOTIFICATION_SERVICE_IMAGE="10.1.20.130:5001/dropping/notification-service:$(yq '.notification_service_version' version.yaml)"
    - export LOG_SERVICE_IMAGE="10.1.20.130:5001/dropping/log-management:$(yq '.log_service_version' version.yaml)"
    - echo $AUTH_SERVICE_IMAGE
    - echo $USER_SERVICE_IMAGE
    - echo $FILE_SERVICE_IMAGE
    - echo $NOTIFICATION_SERVICE_IMAGE
    - echo $LOG_SERVICE_IMAGE
  script:
    - chmod +x ./bin/prod-stop.sh
    - chmod +x ./bin/prod-init.sh
    - chmod +x ./bin/prod-start.sh
    - ./bin/prod-stop.sh
    - ./bin/prod-init.sh
    - ./bin/prod-start.sh
  environment:
    name: production
  after_script:
    - |
      if [ "$CI_JOB_STATUS" = "failed" ]; then
        echo "Job failed, running ./bin/prod-stop.sh for cleanup..."
        chmod +x ./bin/prod-stop.sh
        ./bin/prod-stop.sh
      fi

migrate:
  stage: migrate
  image: docker:24.0.5
  script:
    - docker compose --env-file .env -p dropboks -f docker/docker-compose.bastion.yml up --build --abort-on-container-exit --exit-code-from bastion
  allow_failure: true

cleanup:
  stage: post-deploy
  image: docker:24.0.5
  script:
    - echo "remove unused/exited container"
    - docker container prune -f || true
    - echo "clean up unused docker images"
    - docker rmi $(docker images -aq) -f || true
  allow_failure: true
