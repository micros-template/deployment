services:
  grafana:
    container_name: monitoring-grafana
    build:
      context: ../grafana
      dockerfile: Dockerfile
    image: monitoring-grafana:v0.0.1
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=http://localhost/grafana
      - GF_INSTALL_PLUGINS=victoriametrics-logs-datasource,victoriametrics-metrics-datasource
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      victoriametrics:
        condition: service_healthy
      victorialogs:
        condition: service_healthy

  # VictoriaMetrics instance, a single process responsible for
  # storing metrics and serve read requests.
  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.123.0
    container_name: monitoring-victoriametrics
    # ports:
    #   - 8428:8428
    #   - 8089:8089
    #   - 8089:8089/udp
    #   - 2003:2003
    #   - 2003:2003/udp
    #   - 4242:4242
    volumes:
      - vmdata:/storage
    command:
      - "--storageDataPath=/storage"
      - "--graphiteListenAddr=:2003"
      - "--opentsdbListenAddr=:4242"
      - "--httpListenAddr=:8428"
      - "--influxListenAddr=:8089"
      - "--vmalert.proxyURL=http://vmalert:8880"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:8428"]
      interval: 30s
      timeout: 10s
      retries: 5

  #  VictoriaLogs instance, a single process responsible for
  #  storing logs and serving read queries.
  victorialogs:
    container_name: monitoring-victorialogs
    image: victoriametrics/victoria-logs:v1.26.0
    # ports:
    #   - "9428:9428"
    command:
      - "--storageDataPath=/vlogs"
    volumes:
      - vldata:/vlogs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:9428"]
      interval: 30s
      timeout: 10s
      retries: 5

  # vmauth is a router and balancer for HTTP requests.
  # It proxies query requests from vmalert to either VictoriaMetrics or VictoriaLogs,
  # depending on the requested path.
  vmauth:
    # image: victoriametrics/vmauth:v1.120.0
    container_name: monitoring-vmauth
    build:
      context: ../vm/vmauth
      dockerfile: Dockerfile
    image: monitoring-vmauth:v0.0.1
    # ports:
    #   - 8427:8427
    command:
      - "--auth.config=/etc/auth.yml"
    restart: unless-stopped
    depends_on:
      victoriametrics:
        condition: service_healthy
      victorialogs:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:8427"]
      interval: 30s
      timeout: 10s
      retries: 5

  #  Metrics collector.
  #  It scrapes targets defined in --promscrape.config
  #  And forward them to --remoteWrite.url
  vmagent:
    build:
      context: ../vm/vmagent
      dockerfile: Dockerfile
    container_name: monitoring-vmagent
    image: monitoring-vmagent:v0.0.1
    volumes:
      - vmagentdata:/vmagentdata
    command:
      - "--promscrape.config=/etc/prometheus/prometheus.yml"
      - "--remoteWrite.url=http://vmauth:8427/api/v1/write"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:8429"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      victoriametrics:
        condition: service_healthy

  # vmalert executes alerting and recording rules
  vmalert:
    container_name: monitoring-vmalert
    build:
      context: ../vm/vmalert
      dockerfile: Dockerfile
    image: monitoring-vmalert:v0.0.1
    command:
      - "--datasource.url=http://vmauth:8427/"
      - "--remoteRead.url=http://victoriametrics:8428/"
      - "--remoteWrite.url=http://vmagent:8429/"
      - "--notifier.url=http://alertmanager:9093/"
      - "--rule=/etc/alerts/*.yml"
      # display source of alerts in grafana
      - "--external.url=http://grafana:3000"
      - '--external.alert.source=explore?orgId=1&left={"datasource":"{{ if eq .Type "vlogs" }}VictoriaLogs{{ else }}VictoriaMetrics{{ end }}","queries":[{"expr":{{.Expr|jsonEscape|queryEscape}},"refId":"A"}],"range":{"from":"{{ .ActiveAt.UnixMilli }}","to":"now"}}'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:8880"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      victoriametrics:
        condition: service_healthy
      alertmanager:
        condition: service_started
      vmauth:
        condition: service_healthy

  # alertmanager receives alerting notifications from vmalert
  # and distributes them according to --config.file.
  alertmanager:
    build:
      context: ../vm/alertmanager
      dockerfile: Dockerfile
    container_name: monitoring-alertmanager
    image: monitoring-alertmanager:v0.0.1
    command:
      - "--config.file=/config/alertmanager.yml"
    restart: unless-stopped

volumes:
  vmagentdata: {}
  vmdata: {}
  grafana-data: {}
  vldata: {}
